'''
Given a set of N people (numbered 1, 2, ..., N), we would like to split everyone into two groups of any size.

Each person may dislike some other people, and they should not go into the same group. 

Formally, if dislikes[i] = [a, b], it means it is not allowed to put the people numbered a and b into the same group.

Return true if and only if it is possible to split everyone into two groups in this way.
'''
#Python3

class Solution:
    def possibleBipartition(self, N: int, dislikes: List[List[int]]) -> bool:
        
        graph=collections.defaultdict(list)
        for u,v in dislikes:
            graph[u].append(v)
            graph[v].append(u)

        color={}
        
        #if the color of the node is already in dic it should be the same if not present then set it and do the same with its neigbours.
        def dfs(node,c=0):
            if node in color:
                return color[node]==c
            color[node]=c
            
            x=1
            for nei in graph[node]:
                x*=dfs(nei,c^1)
                
            return x
        
        
        #DFS on all the nodes.
        val=1
        for node in range(1,N+1):
            if node not in color:
                val*=dfs(node)

        return val
