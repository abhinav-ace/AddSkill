'''
Merge two sorted linked lists and return it as a new sorted list. 
The new list should be made by splicing together the nodes of the first two lists.
'''
#Python3

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        
        #Edge Case.
        if l1==None:
            return l2
        elif l2==None:
            return l1
        
        prev=None
        curr1=l1
        curr2=l2
        next1=curr1.next
        next2=curr2.next
        
        
        while curr1!=None and curr2!=None:
            
            #Find a node in l1 that has value greater than that of current node value of l2 and insert to the left of it.
            if curr1.val<=curr2.val:
                prev=curr1
                curr1=next1
                
                if curr1!=None:
                    next1=curr1.next
            
            else:
            
                #Insertion at head.
                if prev==None:
                    l1=curr2
                    curr2.next=curr1
                    prev=curr2 
                    curr2=next2
                    
                    if curr2!=None:
                        next2=curr2.next
                
                else:
                    prev.next=curr2
                    curr2.next=curr1
                    curr2=next2
                    prev=prev.next
                    if curr2!=None:
                        next2=curr2.next
                        
        #l1 has been traversed completely but l2 still has some elements left.
        if curr2!=None:
            prev.next=curr2
            
        return l1  
