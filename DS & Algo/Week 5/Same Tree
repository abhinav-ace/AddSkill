'''
Given two binary trees, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical and the nodes have the same value.
'''
#Python3

Time Complexity- O(min(N,M))
Space Complexity- O(h); h is height of the tree.

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSameTree(self, p: TreeNode, q: TreeNode) -> bool:
        
        def equal(left,right):
            
            
            if left==None and right==None:
                return 1
                
            if left==None or right==None:
                return 0
                
            if left.val!=right.val:
                return 0
            
            return equal(left.left,right.left) and equal(left.right,right.right)
        
        return equal(p,q)
        
