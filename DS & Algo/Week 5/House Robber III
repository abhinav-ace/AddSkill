'''
The thief has found himself a new place for his thievery again. 
There is only one entrance to this area, called the "root." Besides the root, each house has one and only one parent house. 
After a tour, the smart thief realized that "all houses in this place forms a binary tree". 
It will automatically contact the police if two directly-linked houses were broken into on the same night.

Determine the maximum amount of money the thief can rob tonight without alerting the police.
'''
#Python3

Time Complexity- O(N)
Space Complexity- O(N)

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rob(self, root: TreeNode) -> int:
        
        #dic holds node : max value pair.
        dic={}
        
        def helper(curr):
            
            val=0
            
            if curr==None:
                return 0
            
            if curr in dic:
                return dic[curr]
            
            if curr.left!=None:
                val+=helper(curr.left.left)+helper(curr.left.right)
            
            if curr.right!=None:
                val+=helper(curr.right.left)+helper(curr.right.right)
                
            val=max(curr.val+val,helper(curr.left)+helper(curr.right))
            dic[curr]=val
            
            return val
    
        return helper(root)
