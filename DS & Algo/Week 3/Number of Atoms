'''
Given a chemical formula (given as a string), return the count of each atom.

The atomic element always starts with an uppercase character, then zero or more lowercase letters, representing the name.

One or more digits representing that element's count may follow if the count is greater than 1. 
If the count is 1, no digits will follow. For example, H2O and H2O2 are possible, but H1O2 is impossible.

Two formulas concatenated together to produce another formula. For example, H2O2He3Mg4 is also a formula.

A formula placed in parentheses, and a count (optionally added) is also a formula. For example, (H2O2) and (H2O2)3 are formulas.

Given a formula, return the count of all elements as a string in the following form: the first name (in sorted order), 
followed by its count (if that count is more than 1), followed by the second name (in sorted order), followed by its count (if that count is more than 1), and so on.
'''
#Python3

class Solution:
    def countOfAtoms(self, formula: str) -> str:
        
        #A Counter is a dict subclass for counting objects.
        
        n=len(formula)
        stk = [collections.Counter()]
        small='abcdefghijklmnopqrstuvwxyz'
        big='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
        num='0123456789'
        i=0
        
        #The approach is to solve the formula just like we solve an infix expression using stack.
        while i <n:
            
            #For every left parenthesis we add a new Counter in our stack.
            if formula[i]=='(':
                stk.append(collections.Counter())
                i+=1
            
            #Since after every right parenthesis we will encounter a number we pop the topmost stack element and multiply the 
             value of each atom by the value to the right of parenthesis.
            elif formula[i]==')':
                
                pop=stk.pop()
                val=''
                i+=1
                
                if i<n and formula[i] in num:
                    
                    while i<n and formula[i] in num:
                        val+=formula[i]
                        i+=1

                for key,value in pop.items():
                    stk[-1][key]+=value*int(val or 1)
            
            #Every atom and its count is simply added to the counter.
            else:
                st=''
                val=''
                
                if formula[i] in big:
                    st+=formula[i]
                    i+=1

                if i<n and formula[i] in small:
                    st+=formula[i]
                    i+=1
                
                if i<n and formula[i] in num:
                    
                    while i<n and formula[i] in num:
                        val+=formula[i]
                        i+=1
                
                stk[-1][st]+=int(val or 1)
                
        #We simply sort all the elements now and create the required output string.
        ans=''
        
        for key,val in sorted(stk[-1].items()):
            
            if val>1:
                ans+=key+str(val)
                
            else:
                ans+=key
        
        return ans
            
