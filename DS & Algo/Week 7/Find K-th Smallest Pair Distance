'''
Given an integer array, return the k-th smallest distance among all the pairs. The distance of a pair (A, B) is defined as the absolute difference between A and B. 
'''
#Python3

class Solution:
    def smallestDistancePair(self, nums: List[int], k: int) -> int:
        
        def possible(guess):
            i=count=0
            j=1
            
            #Here for each i we are counting the total values of j such that the distance is less then guess distance.
            while i<len(nums):
                while (j<len(nums)) and ((nums[j]-nums[i])<=guess):
                    j+=1
                count+=j-i-1
                i+=1
            return count>=k

        nums.sort()
        low=0
        high=nums[-1]-nums[0]
        
        #We are assuming the kth distance and then finding out total number of pairs such that there distance is less then our guess distance.
        #If the count is more this means our guess distance was more so we need to reduce the guess distance.
        while low<high:
            mid=(low+high)//2
            if possible(mid):
                high=mid
            else:
                low=mid+1
                
        return low
