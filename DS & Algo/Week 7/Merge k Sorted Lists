'''
You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it.
'''
#Python3

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[ListNode]) -> ListNode:
        
        n=len(lists)
        
        if n==0:
            return None
        
        elif n==1:
            return lists[0]
        
        else:
            head=None
            last=head
            heap=[]
            
            for i in range(n):
                
                if lists[i] is not None:
                    curr=lists[i]
                    
                    while curr:
                        heappush(heap,curr.val)
                        curr=curr.next
                        
            while len(heap):
                
                if not head:
                    head=ListNode(heappop(heap))
                    last=head
                    
                else:
                    last.next=ListNode(heappop(heap))
                    last=last.next
                    
            return head
